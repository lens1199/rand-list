{"version":3,"sources":["ItemsContext.js","ItemList.js","ItemAdder.js","ItemButtons.js","ListPanel.js","ResultPanel.js","App.js","index.js"],"names":["ItemsContext","React","createContext","ItemList","useContext","items","removeItemByIndex","itemElements","map","item","index","ListGroup","Item","className","onClick","name","range","toFixed","weight","normalizedWeight","ItemAdder","addItem","useState","itemName","setItemName","itemWeight","setItemWeight","addItemToList","handleKeyDown","e","key","InputGroup","Prepend","Button","FormControl","type","placeholder","value","onChange","target","onKeyDown","ItemButtons","removeAllItems","randItem","saveItemListToLocalStorage","length","Row","Col","variant","block","ListPanel","xs","ResultPanel","randResult","undefined","regionStart","regionEnd","itemSymbol","toUpperCase","toLowerCase","App","itemList","setItemList","setRandResult","recalculateRange","updateItemList","weightTotal","reduce","total","forEach","useEffect","storedItemList","JSON","parse","localStorage","getItem","context","push","splice","Math","random","findIndex","setItem","stringify","Provider","Container","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33b4da39.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ItemsContext = React.createContext();\n\nexport default ItemsContext;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport \"./ItemList.css\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst ItemList = () => {\n  const {items, removeItemByIndex} = useContext(ItemsContext);\n\n  const itemElements = items.map((item, index) =>\n    <ListGroup.Item key={index} className={\"itemContainer\"}>\n      <div>\n        <button className={\"closeButton\"} onClick={() => {\n          removeItemByIndex(index);\n        }}>\n          Ã—\n        </button>\n        <small className={\"mr-2\"}>{index}: </small>\n        {item.name}\n      </div>\n      <span className={\"randRange\"}>~{item.range.toFixed(3)}</span>\n      <small>{item.weight} weight ({item.normalizedWeight.toFixed(3)})</small>\n    </ListGroup.Item>\n  );\n\n  return (\n    <ListGroup>\n      {itemElements}\n    </ListGroup>\n  );\n};\n\nexport default ItemList;\n","import { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemAdder = () => {\n  const {addItem} = useContext(ItemsContext);\n  const [itemName, setItemName] = useState('');\n  const [itemWeight, setItemWeight] = useState(1);\n\n  const addItemToList = () => {\n    if (itemName){\n      addItem(itemName, itemWeight);\n      setItemName(\"\");\n      setItemWeight(1);\n    }\n  };\n\n  const handleNameChange = e => {\n    setItemName(e.target.value);\n  };\n\n  const handleWeightChange = e => {\n    setItemWeight(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      addItemToList();\n    }\n  };\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <Button onClick={addItemToList}>\n          Add\n        </Button>\n      </InputGroup.Prepend>\n\n      <FormControl\n        type={\"text\"}\n        placeholder={\"Name\"}\n        value={itemName}\n        onChange={handleNameChange}\n        onKeyDown={handleKeyDown}\n      />\n\n      <FormControl\n        type={\"number\"}\n        placeholder={\"Weight\"}\n        value={itemWeight}\n        onChange={handleWeightChange}\n        onKeyDown={handleKeyDown}\n      />\n    </InputGroup>\n  );\n};\n\nexport default ItemAdder;\n","import { Col, Row, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemButtons = () => {\n  const {items, removeAllItems, randItem, saveItemListToLocalStorage} = useContext(ItemsContext);\n\n  return (\n    !!items.length &&\n    <>\n      <Row>\n        <Col>\n          <Button variant={\"primary\"} onClick={randItem} block>Generate</Button>\n        </Col>\n      </Row>\n\n      <Row className={\"mt-4\"}>\n        <Col>\n          <Button variant={\"outline-danger\"} onClick={removeAllItems} block>Clear</Button>\n        </Col>\n        <Col>\n          <Button variant={\"outline-info\"} onClick={saveItemListToLocalStorage} block>Save</Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ItemButtons;\n","import { Row, Col } from \"react-bootstrap\";\nimport ItemList from \"./ItemList\";\nimport ItemAdder from \"./ItemAdder\";\nimport ItemButtons from \"./ItemButtons\";\n\nconst ListPanel = () => {\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Available Options</h3>\n      </Col>\n\n      <Col xs={12}>\n        <ItemAdder />\n      </Col>\n\n      <Col xs={12} className={\"my-2\"}>\n        <ItemList />\n      </Col>\n\n      <Col xs={12}>\n        <ItemButtons />\n      </Col>\n    </Row>\n  );\n};\n\nexport default ListPanel;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport './ResultPanel.css';\nimport { Col, Row } from \"react-bootstrap\";\n\nconst ResultPanel = () => {\n  const {items, randResult} = useContext(ItemsContext);\n  const {value, index} = randResult;\n  if (index === undefined || value === undefined || index >= items.length) return null;\n\n  const item = items[index];\n  const itemName = item.name;\n  const regionStart = index > 0 ? items[index - 1].range : 0;\n  const regionEnd = items[index].range;\n\n  let itemSymbol = itemName[0].toUpperCase();\n  if (itemName.length > 1) itemSymbol += itemName[1].toLowerCase();\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Result</h3>\n      </Col>\n\n      <Col xs={12}>\n        <div className={\"resultContainer\"}>\n          <div className={\"top fullwidth\"}>\n            {index}\n          </div>\n\n          <div className={\"body fullWidth\"}>\n            <div className={\"itemSymbol\"}>{itemSymbol}</div>\n            <div className=\"itemName\">{itemName}</div>\n            <small className=\"resultText\">{value}</small>\n          </div>\n\n          <div className=\"bottom fullWidth\">\n            <span>{regionStart.toFixed(6)}</span>\n            <span>{regionEnd.toFixed(6)}</span>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ResultPanel;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport React from \"react\";\nimport ListPanel from \"./ListPanel\";\nimport ResultPanel from \"./ResultPanel\";\n\nconst App = () => {\n  const [itemList, setItemList] = useState([]);\n  const [randResult, setRandResult] = useState({value: undefined, index: undefined});\n\n  const addItem = (name, weight) => {\n    itemList.push({name, weight});\n    recalculateRange();\n  };\n\n  const removeItemByIndex = index => {\n    itemList.splice(index, 1);\n    recalculateRange();\n  };\n\n  const removeAllItems = () => {\n    setItemList([]);\n  };\n\n  const recalculateRange = (updateItemList = true) => {\n    const weightTotal = itemList.reduce((total, item) => total + item.weight, 0);\n    itemList.forEach((item, index) => {\n      item.normalizedWeight = item.range = item.weight / weightTotal;\n      if (index) item.range += itemList[index - 1].range;\n    });\n\n    if (updateItemList) {\n      setRandResult({value: undefined, index: undefined});\n      setItemList([...itemList]);\n    }\n  };\n\n  const randItem = () => {\n    const value = Math.random();\n    const index = itemList.findIndex(item => item.range >= value);\n    setRandResult({value, index});\n  };\n\n  const saveItemListToLocalStorage = () => {\n    localStorage.setItem('itemList', JSON.stringify(itemList));\n  };\n\n  useEffect(() => {\n    const storedItemList = JSON.parse(localStorage.getItem('itemList'));\n    if (storedItemList) setItemList(storedItemList);\n  }, []);\n\n  const context = {\n    items: itemList,\n    randResult,\n    addItem,\n    removeItemByIndex,\n    removeAllItems,\n    randItem,\n    saveItemListToLocalStorage\n  };\n\n  return (\n    <ItemsContext.Provider value={context}>\n      <Container>\n        <Row>\n          <Col xs={12} md={6}>\n            <ListPanel />\n          </Col>\n\n          <Col>\n            <ResultPanel />\n          </Col>\n        </Row>\n      </Container>\n    </ItemsContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}