{"version":3,"sources":["ItemsContext.js","ItemList.js","ItemAdder.js","ItemButtons.js","ListPanel.js","ResultPanel.js","App.js","utils.js","index.js"],"names":["ItemsContext","React","createContext","ItemList","useContext","items","removeItemByIndex","itemElements","map","item","index","ListGroup","Item","className","onClick","name","range","toFixed","weight","normalizedWeight","ItemAdder","addItem","useState","itemName","setItemName","itemWeight","setItemWeight","addItemToList","handleKeyDown","e","key","InputGroup","Prepend","Button","FormControl","type","placeholder","value","onChange","target","onKeyDown","ItemButtons","removeAllItems","randItem","saveItemListToLocalStorage","length","Row","Col","variant","block","ListPanel","xs","ResultPanel","result","itemIndex","undefined","regionStart","regionEnd","itemSymbol","toUpperCase","toLowerCase","App","itemList","setItemList","setResult","setItemIndex","resetResult","recalculateRange","weightTotal","reduce","a","b","newItemList","JSON","parse","stringify","forEach","useEffect","storedItemList","localStorage","getItem","context","push","splice","Math","random","setItem","Provider","Container","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9eadaa5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ItemsContext = React.createContext();\n\nexport default ItemsContext;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport \"./ItemList.css\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst ItemList = () => {\n  const {items, removeItemByIndex} = useContext(ItemsContext);\n\n  const itemElements = items.map((item, index) =>\n    <ListGroup.Item key={index} className={\"itemContainer\"}>\n      <div>\n        <button className={\"closeButton\"} onClick={() => {\n          removeItemByIndex(index);\n        }}>\n          Ã—\n        </button>\n        <small className={\"mr-2\"}>{index}: </small>\n        {item.name}\n      </div>\n      <span className={\"randRange\"}>~{item.range.toFixed(3)}</span>\n      <small>{item.weight} weight ({item.normalizedWeight.toFixed(3)})</small>\n    </ListGroup.Item>\n  );\n\n  return (\n    <ListGroup>\n      {itemElements}\n    </ListGroup>\n  );\n};\n\nexport default ItemList;\n","import { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemAdder = () => {\n  const {addItem} = useContext(ItemsContext);\n  const [itemName, setItemName] = useState('');\n  const [itemWeight, setItemWeight] = useState(1);\n\n  const addItemToList = () => {\n    if (itemName){\n      addItem(itemName, itemWeight);\n      setItemName(\"\");\n      setItemWeight(1);\n    }\n  };\n\n  const handleNameChange = e => {\n    setItemName(e.target.value);\n  };\n\n  const handleWeightChange = e => {\n    setItemWeight(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      addItemToList();\n    }\n  };\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <Button onClick={addItemToList}>\n          Add\n        </Button>\n      </InputGroup.Prepend>\n\n      <FormControl\n        type={\"text\"}\n        placeholder={\"Name\"}\n        value={itemName}\n        onChange={handleNameChange}\n        onKeyDown={handleKeyDown}\n      />\n\n      <FormControl\n        type={\"number\"}\n        placeholder={\"Weight\"}\n        value={itemWeight}\n        onChange={handleWeightChange}\n        onKeyDown={handleKeyDown}\n      />\n    </InputGroup>\n  );\n};\n\nexport default ItemAdder;\n","import { Col, Row, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemButtons = () => {\n  const {items, removeAllItems, randItem, saveItemListToLocalStorage} = useContext(ItemsContext);\n\n  return (\n    !!items.length &&\n    <>\n      <Row>\n        <Col>\n          <Button variant={\"primary\"} onClick={randItem} block>Generate</Button>\n        </Col>\n      </Row>\n\n      <Row className={\"mt-2\"}>\n        <Col>\n          <Button variant={\"outline-danger\"} onClick={removeAllItems} block>Clear</Button>\n        </Col>\n        <Col>\n          <Button variant={\"outline-info\"} onClick={saveItemListToLocalStorage} block>Save</Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ItemButtons;\n","import { Row, Col } from \"react-bootstrap\";\nimport ItemList from \"./ItemList\";\nimport ItemAdder from \"./ItemAdder\";\nimport ItemButtons from \"./ItemButtons\";\n\nconst ListPanel = () => {\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Available Options</h3>\n      </Col>\n\n      <Col xs={12}>\n        <ItemAdder />\n      </Col>\n\n      <Col xs={12} className={\"my-2\"}>\n        <ItemList />\n      </Col>\n\n      <Col xs={12}>\n        <ItemButtons />\n      </Col>\n    </Row>\n  );\n};\n\nexport default ListPanel;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport './ResultPanel.css';\nimport { Col, Row } from \"react-bootstrap\";\n\nconst ResultPanel = () => {\n  const {items, result, itemIndex} = useContext(ItemsContext);\n  if (itemIndex === undefined || itemIndex >= items.length) return null;\n\n  const item = items[itemIndex];\n  const itemName = item.name;\n  const regionStart = itemIndex > 0 ? items[itemIndex - 1].range : 0;\n  const regionEnd = items[itemIndex].range;\n\n  let itemSymbol = itemName[0].toUpperCase();\n  if (itemName.length > 1) itemSymbol += itemName[1].toLowerCase();\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Result</h3>\n      </Col>\n\n      <Col xs={12}>\n        <div className={\"resultContainer\"}>\n          <div className={\"top fullwidth\"}>\n            {itemIndex}\n          </div>\n\n          <div className={\"body fullWidth\"}>\n            <div className={\"itemSymbol\"}>{itemSymbol}</div>\n            <div className=\"itemName\">{itemName}</div>\n            <small className=\"resultText\">{result}</small>\n          </div>\n\n          <div className=\"bottom fullWidth\">\n            <span>{regionStart.toFixed(6)}</span>\n            <span>{regionEnd.toFixed(6)}</span>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ResultPanel;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport React from \"react\";\nimport ListPanel from \"./ListPanel\";\nimport ResultPanel from \"./ResultPanel\";\nimport { copyObject } from \"./utils\";\n\nconst App = () => {\n  const [itemList, setItemList] = useState([]);\n  const [result, setResult] = useState(undefined);\n  const [itemIndex, setItemIndex] = useState(undefined);\n\n  const addItem = (name, weight) => {\n    itemList.push({name, weight});\n    setItemList(itemList);\n    recalculateRange();\n    resetResult();\n  };\n\n  const removeItemByIndex = index => {\n    itemList.splice(index, 1);\n    setItemList(itemList);\n    recalculateRange();\n    resetResult();\n  };\n\n  const removeAllItems = () => {\n    setItemList([]);\n    resetResult();\n  };\n\n  const randItem = () => {\n    const result = Math.random();\n    setResult(result);\n    let index = 0;\n    for (; index < itemList.length && result > itemList[index].range; index++) {\n    }\n    setItemIndex(index);\n  };\n\n  const resetResult = () => {\n    setResult(undefined);\n    setItemIndex(undefined);\n  };\n\n  const recalculateRange = () => {\n    const weightTotal = itemList.reduce((a, b) => a + b.weight, 0);\n    const newItemList = copyObject(itemList);\n    newItemList.forEach((item, index) => {\n      item.normalizedWeight = item.weight / weightTotal;\n      item.range = index ? item.normalizedWeight + newItemList[index - 1].range : item.normalizedWeight;\n    });\n    setItemList(newItemList);\n  };\n\n  const saveItemListToLocalStorage = () => {\n    localStorage.setItem('itemList', JSON.stringify(itemList));\n  };\n\n  useEffect(() => {\n    const storedItemList = JSON.parse(localStorage.getItem('itemList'));\n    if (storedItemList) setItemList(storedItemList);\n  }, []);\n\n  const context = {\n    items: itemList,\n    result,\n    itemIndex,\n    addItem,\n    removeItemByIndex,\n    removeAllItems,\n    randItem,\n    saveItemListToLocalStorage\n  };\n\n  return (\n    <ItemsContext.Provider value={context}>\n      <Container>\n        <Row>\n          <Col xs={12} md={6}>\n            <ListPanel />\n          </Col>\n\n          <Col>\n            <ResultPanel />\n          </Col>\n        </Row>\n      </Container>\n    </ItemsContext.Provider>\n  );\n};\n\nexport default App;\n","export const copyObject = (target) => JSON.parse(JSON.stringify(target));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}