{"version":3,"sources":["ItemsContext.js","ItemList.js","ItemAdder.js","ItemButtons.js","ListPanel.js","ResultPanel.js","App.js","index.js"],"names":["ItemsContext","React","createContext","ItemList","useContext","items","removeItemByIndex","itemElements","map","item","index","ListGroup","Item","className","onClick","name","range","toFixed","weight","normalizedWeight","ItemAdder","addItem","useState","itemName","setItemName","itemWeight","setItemWeight","addItemToList","handleKeyDown","e","key","InputGroup","Prepend","Button","FormControl","type","placeholder","value","onChange","target","onKeyDown","ItemButtons","fileReader","setItems","removeAllItems","randItem","saveItemListToLocalStorage","fileInput","useRef","handleFileRead","content","result","restoredItems","JSON","parse","length","Row","Col","variant","block","element","document","createElement","file","Blob","stringify","href","URL","createObjectURL","download","body","appendChild","click","ref","style","display","accept","current","files","FileReader","onloadend","readAsText","ListPanel","xs","ResultPanel","randResult","undefined","regionStart","regionEnd","itemSymbol","toUpperCase","toLowerCase","App","itemList","setItemList","setRandResult","recalculateRange","updateItemList","weightTotal","reduce","total","forEach","useEffect","storedItemList","localStorage","getItem","context","push","splice","Math","random","findIndex","setItem","Provider","Container","md","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ff5664e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ItemsContext = React.createContext();\n\nexport default ItemsContext;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport \"./ItemList.css\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst ItemList = () => {\n  const {items, removeItemByIndex} = useContext(ItemsContext);\n\n  const itemElements = items.map((item, index) =>\n    <ListGroup.Item key={index} className={\"itemContainer\"}>\n      <div>\n        <button className={\"closeButton\"} onClick={() => {\n          removeItemByIndex(index);\n        }}>\n          Ã—\n        </button>\n        <small className={\"mr-2\"}>{index}: </small>\n        {item.name}\n      </div>\n      <span className={\"randRange\"}>~{item.range.toFixed(3)}</span>\n      <small>{item.weight} weight ({item.normalizedWeight.toFixed(3)})</small>\n    </ListGroup.Item>\n  );\n\n  return (\n    <ListGroup>\n      {itemElements}\n    </ListGroup>\n  );\n};\n\nexport default ItemList;\n","import { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemAdder = () => {\n  const {addItem} = useContext(ItemsContext);\n  const [itemName, setItemName] = useState('');\n  const [itemWeight, setItemWeight] = useState(1);\n\n  const addItemToList = () => {\n    if (itemName){\n      addItem(itemName, itemWeight);\n      setItemName(\"\");\n      setItemWeight(1);\n    }\n  };\n\n  const handleNameChange = e => {\n    setItemName(e.target.value);\n  };\n\n  const handleWeightChange = e => {\n    setItemWeight(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      addItemToList();\n    }\n  };\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <Button onClick={addItemToList}>\n          Add\n        </Button>\n      </InputGroup.Prepend>\n\n      <FormControl\n        type={\"text\"}\n        placeholder={\"Name\"}\n        value={itemName}\n        onChange={handleNameChange}\n        onKeyDown={handleKeyDown}\n      />\n\n      <FormControl\n        type={\"number\"}\n        placeholder={\"Weight\"}\n        value={itemWeight}\n        onChange={handleWeightChange}\n        onKeyDown={handleKeyDown}\n      />\n    </InputGroup>\n  );\n};\n\nexport default ItemAdder;\n","import {Col, Row, Button} from \"react-bootstrap\";\nimport {useContext, useRef} from \"react\";\nimport ItemsContext from \"./ItemsContext\";\n\nconst ItemButtons = () => {\n  const {items, setItems, removeAllItems, randItem, saveItemListToLocalStorage} = useContext(ItemsContext);\n  const fileInput = useRef(null);\n  let fileReader;\n\n  const saveOnClick = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(items)], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = \"items.json\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const uploadOnClick = () => {\n    if (fileInput.current) fileInput.current.click();\n  };\n\n  const handleFileRead = () => {\n    const content = fileReader.result;\n    const restoredItems = JSON.parse(content);\n    setItems(restoredItems);\n  };\n\n  const uploadOnChange = () => {\n    if (fileInput.current && fileInput.current.files[0]) {\n      const file = fileInput.current.files[0];\n      fileReader = new FileReader();\n      fileReader.onloadend = handleFileRead;\n      fileReader.readAsText(file);\n    }\n  };\n\n  return (\n    !!items.length &&\n    <>\n      <Row>\n        <Col>\n          <Button variant={\"primary\"} onClick={randItem} block>Generate</Button>\n        </Col>\n      </Row>\n\n      <Row className={\"mt-4\"}>\n        <Col>\n          <Button variant={\"outline-danger\"} onClick={removeAllItems} block>Clear</Button>\n        </Col>\n        <Col>\n          <Button variant={\"outline-info\"} onClick={saveItemListToLocalStorage} block>Save</Button>\n        </Col>\n        <Col>\n          <Button variant={\"outline-info\"} block onClick={saveOnClick}>Download</Button>\n        </Col>\n        <Col>\n          <input type={'file'} ref={fileInput} style={{display: 'none'}} accept={'.json'} onChange={uploadOnChange}/>\n          <Button variant={\"outline-info\"} block onClick={uploadOnClick}>Upload</Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ItemButtons;\n","import { Row, Col } from \"react-bootstrap\";\nimport ItemList from \"./ItemList\";\nimport ItemAdder from \"./ItemAdder\";\nimport ItemButtons from \"./ItemButtons\";\n\nconst ListPanel = () => {\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Available Options</h3>\n      </Col>\n\n      <Col xs={12}>\n        <ItemAdder />\n      </Col>\n\n      <Col xs={12} className={\"my-2\"}>\n        <ItemList />\n      </Col>\n\n      <Col xs={12}>\n        <ItemButtons />\n      </Col>\n    </Row>\n  );\n};\n\nexport default ListPanel;\n","import { useContext } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport './ResultPanel.css';\nimport { Col, Row } from \"react-bootstrap\";\n\nconst ResultPanel = () => {\n  const {items, randResult} = useContext(ItemsContext);\n  const {value, index} = randResult;\n  if (index === undefined || value === undefined || index >= items.length) return null;\n\n  const item = items[index];\n  const itemName = item.name;\n  const regionStart = index > 0 ? items[index - 1].range : 0;\n  const regionEnd = items[index].range;\n\n  let itemSymbol = itemName[0].toUpperCase();\n  if (itemName.length > 1) itemSymbol += itemName[1].toLowerCase();\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <h3>Result</h3>\n      </Col>\n\n      <Col xs={12}>\n        <div className={\"resultContainer\"}>\n          <div className={\"top fullwidth\"}>\n            {index}\n          </div>\n\n          <div className={\"body fullWidth\"}>\n            <div className={\"itemSymbol\"}>{itemSymbol}</div>\n            <div className=\"itemName\">{itemName}</div>\n            <small className=\"resultText\">{value}</small>\n          </div>\n\n          <div className=\"bottom fullWidth\">\n            <span>{regionStart.toFixed(6)}</span>\n            <span>{regionEnd.toFixed(6)}</span>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ResultPanel;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport ItemsContext from \"./ItemsContext\";\nimport React from \"react\";\nimport ListPanel from \"./ListPanel\";\nimport ResultPanel from \"./ResultPanel\";\n\nconst App = () => {\n  const [itemList, setItemList] = useState([]);\n  const [randResult, setRandResult] = useState({value: undefined, index: undefined});\n\n  const addItem = (name, weight) => {\n    itemList.push({name, weight});\n    recalculateRange();\n  };\n\n  const removeItemByIndex = index => {\n    itemList.splice(index, 1);\n    recalculateRange();\n  };\n\n  const removeAllItems = () => {\n    setItemList([]);\n  };\n\n  const recalculateRange = (updateItemList = true) => {\n    const weightTotal = itemList.reduce((total, item) => total + item.weight, 0);\n    itemList.forEach((item, index) => {\n      item.normalizedWeight = item.range = item.weight / weightTotal;\n      if (index) item.range += itemList[index - 1].range;\n    });\n\n    if (updateItemList) {\n      setRandResult({value: undefined, index: undefined});\n      setItemList([...itemList]);\n    }\n  };\n\n  const randItem = () => {\n    const value = Math.random();\n    const index = itemList.findIndex(item => item.range >= value);\n    setRandResult({value, index});\n  };\n\n  const saveItemListToLocalStorage = () => {\n    localStorage.setItem('itemList', JSON.stringify(itemList));\n  };\n\n  useEffect(() => {\n    const storedItemList = JSON.parse(localStorage.getItem('itemList'));\n    if (storedItemList) setItemList(storedItemList);\n  }, []);\n\n  const context = {\n    items: itemList,\n    setItems: setItemList,\n    randResult,\n    addItem,\n    removeItemByIndex,\n    removeAllItems,\n    randItem,\n    saveItemListToLocalStorage\n  };\n\n  return (\n    <ItemsContext.Provider value={context}>\n      <Container>\n        <Row>\n          <Col xs={12} md={6}>\n            <ListPanel />\n          </Col>\n\n          <Col>\n            <ResultPanel />\n          </Col>\n        </Row>\n      </Container>\n    </ItemsContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}